@page "/carddemo"
@using Microsoft.AspNetCore.Components.Web
@inject IJSRuntime JSRuntime

<div class="card-container" @onwheel="HandleWheel">
    <CardPage 
    ImageUrl="/image/1.avif" 
    Title="@($"{Title} - 1")"
    Description="@Description" 
    IsActive="@(pageIndex == 0)" />
    <CardPage 
    ImageUrl="/image/2.avif" 
    Title="@($"{Title} - 2")"
    Description="@Description" 
    IsActive="@(pageIndex == 1)" />
    <CardPage 
    ImageUrl="/image/3.avif" 
    Title="@($"{Title} - 3")"
    Description="@Description" 
    IsActive="@(pageIndex == 2)" />
    <CardPage 
    ImageUrl="/image/C81_Header_4.1.avif" 
    Title="@($"{Title} - 4")"
    Description="@Description" 
    IsActive="@(pageIndex == 3)" />

    <div class="pagination">
        @for (int i = 0; i < totalPages; i++)
        {
            int index = i;
            <div class="page-indicator @(pageIndex == index ? "active" : "")" @onclick="() => ChangePage(index)"></div>
        }
    </div>

    <div class="PlayButton">
        <FluentButton @onclick="Play"
                      Appearance="Appearance.Outline"
                      IconEnd="@(isPlaying ? new Icons.Regular.Size20.Pause() : new Icons.Regular.Size20.Play())">
        </FluentButton>
    </div>
</div>

<audio class="MusicPlayer">
    <source src="/music/I Am So John Stamos(2013) - Lost Years.mp3" type="audio/mp3">
</audio>

@code {
    private int pageIndex = 0;
    private bool isScrolling = false;
    private bool isPlaying = false;
    private int totalPages = 4;
    private string Title = "Lipsum";
    private string Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";

    private async Task HandleWheel(WheelEventArgs e)
    {
        if (isScrolling) return;
        
        isScrolling = true;
        
        if (e.DeltaY > 0 && pageIndex < totalPages - 1)
        {
            pageIndex++;
        }
        else if (e.DeltaY < 0 && pageIndex > 0)
        {
            pageIndex--;
        }
        
        await Task.Delay(500);
        isScrolling = false;
    }
    
    private void ChangePage(int index)
    {
        pageIndex = index;
    }

    private async Task Play()
    {
        isPlaying = !isPlaying;
        await JSRuntime.InvokeVoidAsync("fullscreenHelpers.Player", isPlaying);
    }
}